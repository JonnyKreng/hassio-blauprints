blueprint:
  name: TRV External Temperature Control with Door Sensor
  description: Updates a TRV's external temperature setpoint based on an external temperature sensor, with optional door sensor integration
  domain: automation
  input:
    trv_entity:
      name: TRV Entity
      selector:
        entity:
          domain: climate
      description: The TRV to control
    temperature_sensor:
      name: External Temperature Sensor
      selector:
        entity:
          domain: sensor
          device_class: temperature
      description: External temperature sensor to use for the TRV
    door_sensor:
      name: Door Sensor
      selector:
        entity:
          domain: binary_sensor
      description: Optional door sensor to disable TRV when door is open
      default: 

variables:
  trv_entity: !input trv_entity
  temperature_sensor: !input temperature_sensor
  door_sensor: !input door_sensor

trigger:
  - platform: state
    entity_id: !input temperature_sensor
  - platform: state
    entity_id: !input door_sensor
    enabled: "{{ door_sensor != None }}"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ door_sensor != None and states(door_sensor) == 'on' }}"
        sequence:
          - service: climate.turn_off
            target:
              entity_id: "{{ trv_entity }}"
              
      - conditions:
          - condition: template
            value_template: "{{ door_sensor == None or states(door_sensor) == 'off' }}"
        sequence:
          - service: number.set_value
            target:
              entity_id: >
                {{ trv_entity | replace('climate.', 'number.') |  replace('_thermostat', '') }}_external_temperature_sensor_value
            data:
              value: "{{ states(temperature_sensor) | float }}"

mode: single
